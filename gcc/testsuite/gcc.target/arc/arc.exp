# Copyright (C) 2007, 2011, 2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# GCC testsuite that uses the `dg.exp' driver.

# Exit immediately if this isn't an arc target.
if ![istarget arc*-*-*] then {
  return
}

# Load support procs.
load_lib gcc-dg.exp

proc check_effective_target_arc_fpu_ok { } {
    return [check_no_compiler_messages arc_fpu_ok object {
	int dummy;
    } "-mcpu=ARCv2HS -mfpu=fpud_all"]
}

# Return 1 if this is a compiler supporting ARCv2 EM as default processor
proc check_effective_target_arcem { } {
    return [check_no_compiler_messages arcem assembly {
	#if !defined(__EM__)
	#error EMFOO
	#endif
    }]
}

# Return 1 if we compile for ARC700
proc check_effective_target_arc700 { } {
    return [check_no_compiler_messages arc700 assembly {
	#if !defined(__ARC700__)
	#error EMFOO
	#endif
    }]
}

# Return 1 if we compile for ARC6xx
proc check_effective_target_arc6xx { } {
    return [check_no_compiler_messages arc6xx assembly {
	#if !defined(__ARC600__) && !defined(__ARC601__)
	#error EMFOO
	#endif
    }]
}


# If a testcase doesn't have special options, use these.
global DEFAULT_CFLAGS
if ![info exists DEFAULT_CFLAGS] then {
    set DEFAULT_CFLAGS " -ansi -pedantic-errors"
}

# Initialize `dg'.
dg-init

# Main loop.
dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\[cS\]]] \
	"" $DEFAULT_CFLAGS

# All done.
dg-finish
